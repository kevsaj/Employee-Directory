{"version":3,"sources":["components/Header.js","components/User.js","components/UsersList.js","components/SearchBar.js","reducers/users.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","User","name","location","email","picture","src","medium","alt","first","last","country","connect","state","users","props","map","user","login","uuid","SearchBar","onSearch","searchTerm","handleSortByName","onClick","type","value","onChange","placeholder","usersReducer","action","store","createStore","subscribe","console","log","getState","App","axios","get","then","response","data","dispatch","addUsers","results","React","Component","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"2RAMeA,EAJA,WACX,OAAO,oBAAIC,UAAU,SAAd,iC,QCYIC,EAbF,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACnC,OACI,sBAAKL,UAAU,cAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKM,IAAKD,EAAQE,OAAQC,IAAKN,EAAKO,UAExC,gCAAK,2CAAL,IAA6BP,EAAKO,MAAlC,IAA0CP,EAAKQ,QAC/C,gCAAK,8CAAL,IAAgCP,EAASQ,WACzC,gCAAK,4CAAL,IAA8BP,SCQ3BQ,eANS,SAACC,GACrB,MAAO,CACHC,MAAOD,KAIAD,EAdG,SAACG,GACf,OACI,qBAAKf,UAAU,YAAf,SACMe,EAAMD,OAASC,EAAMD,MAAME,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,eAAgCA,GAArBA,EAAKC,MAAMC,c,MCe9DC,MApBf,YAAgE,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,iBACvC,OACI,sBAAKvB,UAAU,oDAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,wBAAQwB,QAASD,EAAkBE,KAAK,SAASzB,UAAU,eAA3D,4BAEJ,8BACA,+BACI,uBACI0B,MAAOJ,EACPK,SAAUN,EACVrB,UAAU,kCACVyB,KAAK,OACLG,YAAY,yB,eCRjBC,EAPM,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIiB,EAAW,uCACzC,OAAOA,EAAOL,MACV,IAAK,YACD,MAAM,GAAN,mBAAWZ,GAAX,YAAqBiB,EAAOhB,UCSlCiB,EAAQC,YAAYH,GAE1BE,EAAME,WAAU,WACZC,QAAQC,IAAI,cAAeJ,EAAMK,eAGrC,IAQMC,E,uKACF,WACIC,IAAMC,IAAI,gDACLC,MAAK,SAAAC,GACFP,QAAQC,IAAIM,EAASC,MACrBX,EAAMY,SAbL,SAAC7B,GACd,MAAO,CACHW,KAAM,YACNX,SAUuB8B,CAASH,EAASC,KAAKG,e,oBAGlD,WACI,OACI,sBAAK7C,UAAU,eAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAbE8C,IAAMC,WAmBxBC,IAASC,OACL,cAAC,IAAD,CAAUlB,MAAOA,EAAjB,SACI,cAAC,EAAD,MAERmB,SAASC,eAAe,SAETd,QCvCAe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIRtB,EAAQC,YAAYH,GAE1BE,EAAME,WAAU,WACZC,QAAQC,IAAI,cAAeJ,EAAMK,eAGrCY,IAASC,OACP,cAAC,IAAD,CAAUlB,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFmB,SAASC,eAAe,SAM1BC,M","file":"static/js/main.f035390c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return <h1 className=\"header\">Employee-Directory</h1>;\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst User = ({ name, location, email, picture }) => {\r\n    return (\r\n        <div className=\"random-user\">\r\n            <div className=\"user-image\">\r\n                <img src={picture.medium} alt={name.first} />\r\n            </div>\r\n            <div><strong>Name:</strong> {name.first} {name.last}</div>\r\n            <div><strong>Country:</strong> {location.country}</div>\r\n            <div><strong>Email:</strong> {email}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport User from './User';\r\n\r\nconst UsersList = (props) => {\r\n    return (\r\n        <div className=\"user-list\">\r\n            { props.users && props.users.map((user) => <User key={user.login.uuid} {...user} /> ) }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UsersList);","import React from \"react\";\r\n\r\nfunction SearchBar({ onSearch, searchTerm, handleSortByName }) { // The two props coming down from the SearchBar Component\r\n    return (\r\n        <div className=\"searchBar d-flex justify-content-around mt-3 mb-3\">\r\n            <div className=\"sortByNameBtn\">\r\n                <button onClick={handleSortByName} type=\"button\" className=\"btn btn-dark\">Sort by Name</button>\r\n            </div>\r\n            <div>\r\n            <form>\r\n                <input\r\n                    value={searchTerm} // value attribute here keeps what you type in sync\r\n                    onChange={onSearch} // the onChange is the event listening attribute that uses the onSearch prop method let state know there was a change\r\n                    className=\"shadow pl-5 rounded w-full py-1\"\r\n                    type=\"text\"\r\n                    placeholder=\"search users\"/>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","const usersReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_USERS':\r\n            return [...state, ...action.users];\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Provider } from 'react-redux';\nimport Header from './components/Header';\nimport UsersList from './components/UsersList';\nimport './css/styles.css';\nimport SearchBar from \"./components/SearchBar\";\n\nimport { createStore } from 'redux';\nimport usersReducer from './reducers/users';\n\nconst store = createStore(usersReducer);\n\nstore.subscribe(() => {\n    console.log('store data:', store.getState());\n});\n\nconst addUsers = (users) => {\n    return {\n        type: 'ADD_USERS',\n        users\n    };\n};\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        axios.get('https://randomuser.me/api/?results=25&nat=us')\n            .then(response => {\n                console.log(response.data);\n                store.dispatch(addUsers(response.data.results));\n            })\n    }\n    render() {\n        return (\n            <div className=\"main-section\">\n                <Header />\n                <SearchBar />\n                <UsersList />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\ndocument.getElementById('root'));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport './css/styles.css';\n\nimport { createStore } from 'redux';\nimport usersReducer from './reducers/users';\n\nconst store = createStore(usersReducer);\n\nstore.subscribe(() => {\n    console.log('store data:', store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}